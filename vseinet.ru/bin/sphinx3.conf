source vseinet
{
    type                    = pgsql
    sql_host                = 192.168.122.195
    sql_port                = 5432
    sql_db                  = dev
    sql_user                = dev
    sql_pass                = SXmtU1JE1z
}

source base_product_index : vseinet
{
    sql_field_string        = name
    sql_attr_uint           = category_id
    sql_attr_uint           = section_id
    sql_attr_uint           = brand_id
    sql_attr_multi          = uint supplier_id from ranged-query; SELECT sp.base_product_id AS id, sp.supplier_id FROM supplier_product sp INNER JOIN supplier s ON s.id = sp.supplier_id WHERE s.is_active = true AND sp.base_product_id BETWEEN $start AND $end; SELECT MIN(sp.base_product_id), MAX(sp.base_product_id) FROM supplier_product AS sp
    sql_attr_bool           = is_forbidden
    sql_attr_json           = details
    sql_attr_json           = availability
    sql_attr_json           = price
    sql_attr_json           = price_order
    sql_attr_json           = profit
    sql_attr_json           = rating
    sql_attr_json           = nofilled
    sql_attr_timestamp      = created_at
    sql_attr_bool           = killbill
    sql_query_range         = SELECT MIN(bp.id), MAX(bp.id) FROM base_product AS bp
    sql_range_step          = 5000
    sql_ranged_throttle     = 10
    sql_query               = SELECT bp.id, bp.name, bp.category_id, COALESCE(bp.category_section_id, 0) AS section_id, bp.brand_id, b.is_forbidden, bpd.details, bpi.availability, bpi.price, bpi.price_order, bpi.profit, bpi.rating, bpi.nofilled, bp.created_at, 0 AS killbill FROM base_product AS bp INNER JOIN base_product_data AS bpd ON bpd.base_product_id = bp.id INNER JOIN base_product_index AS bpi ON bpi.base_product_id = bp.id INNER JOIN brand AS b ON b.id = bp.brand_id WHERE bp.id BETWEEN $start AND $end
}

index base_product_index
{
    source                  = base_product_index
    path                    = /var/lib/sphinx/pgsql/dev/base_product_index
    docinfo                 = extern
    morphology              = stem_en, lemmatize_ru
    min_infix_len           = 1
    min_word_len            = 1
    expand_keywords         = 1
    index_exact_words       = 1
    charset_table           = 0..9, A..Z->a..z, _, a..z, \
                            U+410..U+42F->U+430..U+44F, U+430..U+44F, U+401->U+0435, U+451->U+0435
    #wordforms               = /var/lib/sphinx/wordforms.txt
}

index base_product_index_rt
{
    type                    = rt
    rt_field                = name
    rt_attr_uint            = category_id
    rt_attr_uint            = section_id
    rt_attr_uint            = brand_id
    rt_attr_multi           = supplier_id
    rt_attr_bool            = is_forbidden
    rt_attr_json            = details
    rt_attr_json            = availability
    rt_attr_json            = price
    rt_attr_json            = price_order
    rt_attr_json            = profit
    rt_attr_json            = rating
    rt_attr_json            = nofilled
    rt_attr_timestamp       = created_at
    rt_attr_bool            = killbill
    path                    = /var/lib/sphinx/pgsql/dev/base_product_index_rt
    docinfo                 = extern
    min_infix_len           = 1
    min_word_len            = 1
    expand_keywords         = 1
    index_exact_words       = 1
    charset_table           = 0..9, A..Z->a..z, _, a..z, \
                            U+410..U+42F->U+430..U+44F, U+430..U+44F, U+401->U+0435, U+451->U+0435
    #wordforms               = /var/lib/sphinx/wordforms.txt
    rt_mem_limit            = 1024M
}

index base_product
{
    type                    = distributed
    local                   = base_product_index
    local                   = base_product_index_rt
}

source category_index : vseinet
{
    sql_field_string        = name
    sql_attr_uint           = rating
    sql_attr_bool           = is_leaf
    sql_attr_bool           = killbill
    sql_query               = SELECT c.id, c.name, c.rating, CASE WHEN EXISTS (SELECT 1 FROM category AS cc WHERE cc.pid = c.id) THEN false ELSE true END AS is_leaf, false killbill FROM category AS c WHERE CASE WHEN (SELECT true FROM category_path AS cp WHERE cp.pid = 7707 AND cp.id = c.id) THEN false ELSE true END AND c.id > 0
}

index category_index
{
    source                  = category_index
    path                    = /var/lib/sphinx/pgsql/dev/category_index
    docinfo                 = extern
    morphology              = stem_en, lemmatize_ru
    min_infix_len           = 1
    min_word_len            = 1
    expand_keywords         = 1
    index_exact_words       = 1
    charset_table           = 0..9, A..Z->a..z, _, a..z, \
                            U+410..U+42F->U+430..U+44F, U+430..U+44F, U+401->U+0435, U+451->U+0435
    #wordforms               = /var/lib/sphinx/wordforms.txt
}

index category_index_rt
{
    type                    = rt
    rt_field                = name
    rt_attr_uint            = rating
    rt_attr_bool            = is_leaf
    rt_attr_bool            = killbill
    path                    = /var/lib/sphinx/pgsql/dev/category_index_rt
    docinfo                 = extern
    morphology              = stem_en, lemmatize_ru
    min_infix_len           = 1
    min_word_len            = 1
    expand_keywords         = 1
    index_exact_words       = 1
    charset_table           = 0..9, A..Z->a..z, _, a..z, \
                            U+410..U+42F->U+430..U+44F, U+430..U+44F, U+401->U+0435, U+451->U+0435
    #wordforms               = /var/lib/sphinx/wordforms.txt
    rt_mem_limit            = 2M
}

index category
{
    type                    = distributed
    local                   = category_index
    local                   = category_index_rt
}

source supplier_product_index : vseinet
{
    sql_field_string        = code
    sql_attr_bool           = killbill
    sql_query_range         = SELECT MIN(sp.id), MAX(sp.id) FROM supplier_product sp INNER JOIN base_product bp ON bp.id = sp.base_product_id
    sql_range_step          = 30000
    sql_ranged_throttle     = 10
    sql_query               = SELECT sp.id, COALESCE(sp.code, sp.article) AS code, 0 AS killbill FROM supplier_product sp WHERE sp.id BETWEEN $start AND $end
}

index supplier_product_index
{
    source                  = supplier_product_index
    path                    = /var/lib/sphinx/pgsql/dev/supplier_product_index
    docinfo                 = extern
    morphology              = stem_en, lemmatize_ru
    min_infix_len           = 1
    min_word_len            = 1
    expand_keywords         = 1
    index_exact_words       = 1
    charset_table           = 0..9, A..Z->a..z, _, a..z, \
                            U+410..U+42F->U+430..U+44F, U+430..U+44F, U+401->U+0435, U+451->U+0435
    #wordforms               = /var/lib/sphinx/wordforms.txt
}

index supplier_product_index_rt
{
    type                    = rt
    rt_field                = code
    rt_attr_bool            = killbill
    path                    = /var/lib/sphinx/pgsql/dev/supplier_product_index_rt
    docinfo                 = extern
    morphology              = stem_en, lemmatize_ru
    min_infix_len           = 1
    min_word_len            = 1
    expand_keywords         = 1
    index_exact_words       = 1
    charset_table           = 0..9, A..Z->a..z, _, a..z, \
                            U+410..U+42F->U+430..U+44F, U+430..U+44F, U+401->U+0435, U+451->U+0435
    #wordforms               = /var/lib/sphinx/wordforms.txt
    rt_mem_limit            = 1024M
}

index supplier_product
{
    type                    = distributed
    local                   = supplier_product_index
    local                   = supplier_product_index_rt
}

common
{
    lemmatizer_base         = /var/lib/sphinx/dict
}

indexer
{
    mem_limit               = 512M
}

searchd
{
    listen                  = 9318:mysql41
    log                     = /var/log/sphinx-pgsql-dev/searchd.log
    query_log               = /var/log/sphinx-pgsql-dev/query.log
    read_timeout            = 5
    max_children            = 300
    pid_file                = /var/run/sphinx-pgsql-dev/searchd.pid
    seamless_rotate         = 1
    preopen_indexes         = 1
    max_filters             = 256
    max_filter_values       = 4096
    unlink_old              = 1
    workers                 = threads
    binlog_path             = /var/lib/sphinx/pgsql/dev
}
